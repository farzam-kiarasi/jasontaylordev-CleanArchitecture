@using BlazorFluentUI.Routing

<Stack Horizontal="false" VerticalFill="true" Style="overflow:hidden;">
    <StackItem Grow="0" VerticalFill="false" Style="padding-left: 30px">
        <div class="top-row">
            <BlazorFluentUI.Link Href="/">BlazorClient V@(System.Reflection.Assembly.GetAssembly(typeof(FluentUIComponentBase))?.GetName()?.Version?.ToString() ?? "NULL")</BlazorFluentUI.Link>
        </div>
    </StackItem>
    <StackItem VerticalFill="true" Style="overflow-y:auto;">
        <Nav>
            <NavLinkGroup Name="Basic Controls" CollapseByDefault="false">
                <BlazorFluentUI.Routing.NavLink Name="Counter" Url="counter" Id="counterpage" IconName="add" OnClick=@OnLinkClicked />
                <BlazorFluentUI.Routing.NavLink Name="Weather" Url="fetchdata" Id="weather" IconName="beach" OnClick=@OnLinkClicked />
                <BlazorFluentUI.Routing.NavLink Name="Todo" Url="todo" Id="todopage" IconName="apps_list" OnClick=@OnLinkClicked />
            </NavLinkGroup>
            <NavLinkGroup Name="Account" CollapseByDefault="true">
                <LoginDisplay />
            </NavLinkGroup>
        </Nav>
    </StackItem>
</Stack>

@code {
    [Parameter] public EventCallback<BlazorFluentUI.Routing.NavLink> OnLinkClicked { get; set; }

    bool collapseNavMenu = true;

    string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
